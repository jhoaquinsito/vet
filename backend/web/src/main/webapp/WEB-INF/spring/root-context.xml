<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components 
		Ver documentaciÃ³n:

	Spring lets you define multiple contexts in a parent-child hierarchy.

	The root-context.xml defines the beans for the "root webapp context", i.e. the context associated with the webapp.

	The spring-servlet.xml (or whatever else you call it) defines the beans for one servlet's app context. There can be many of these in a webapp, one per Spring servlet (e.g. spring1-servlet.xml for servlet spring1, spring2-servlet.xml for servlet spring2).

	Beans in spring-servlet.xml can reference beans in root-context.xml, but not vice versa.

	All Spring MVC controllers must go in the spring-servlet.xml context.

	In most simple cases, the root-context.xml context is unnecessary. It is generally used to contain beans that are shared between all servlets in a webapp. If you only have one servlet, then there's not really much point, unless you have a specific use for it.

	-->
		
</beans>
